name: CI

on: [push]

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        php: ['8.0', '8.1']
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: xdebug
      - name: Validate composer
        run: composer validate
      - name: Install dependencies
        run: composer install --no-interaction --no-progress
      - name: Test
        run: vendor/bin/phpunit --coverage-text --colors=never
        env:
          XDEBUG_MODE: coverage

  lint-phpstan:
    name: PHPStan
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        php: ['8.0', '8.1']
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: none
      - name: Validate composer
        run: composer validate
      - name: Install dependencies
        run: composer install --no-interaction --no-progress
      - name: PHPStan
        run: vendor/bin/phpstan

  lint-phpcs:
    name: PHP CodeSniffer
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        php: ['8.0', '8.1']
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: none
      - name: Validate composer
        run: composer validate
      - name: Install dependencies
        run: composer install --no-interaction --no-progress
      - name: PHP CodeSniffer
        run: vendor/bin/phpcs --no-colors

  lsif:
    name: LSIF
    needs: [test, lint-phpstan, lint-phpcs]
    if: github.repository == 'davidrjenni/lsif-php'
    runs-on: ubuntu-latest
    container: davidrjenni/lsif-php:main
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Generate LSIF data
        run: lsif-php
      - name: Upload LSIF data
        run: src lsif upload -github-token=${{ secrets.GITHUB_TOKEN }}

  deploy:
    name: Build and push image
    needs: [test, lint-phpstan, lint-phpcs]
    if: |
      github.repository == 'davidrjenni/lsif-php' &&
      (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Login to GitHub
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            davidrjenni/lsif-php
            ghcr.io/davidrjenni/lsif-php
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
